# Use a library for piping.
library(magrittr)
# Set the working directory to the directory of the script.
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load gDoc input as txt.
gDoc <- readLines(con = "gDoc.txt",
encoding = "UTF-8")
gDoc
gDoc %>% length()
gDoc %>% class
# Remove empty lines.
gDoc== ""
# Remove empty lines.
gDoc <- gDoc[gDoc != ""]
gDoc %>% head()
# List the list of the role files.
list_files <- list.files("../docs/roles/")
# Get the list of the roles.
list_roles <- list_files %>%
# Remove the extension.
tools::file_path_sans_ext() %>%
# Replace hyphens with spaces.
stringr::str_replace_all("-", " ") %>%
# Capitalize the first letter.
stringr::str_to_title() %>%
# Remove the uppercase of link words as "De" or "Du".
stringr::str_replace(" De ", " de ") %>%
stringr::str_replace(" Du ", " du ") %>%
# Fix "Croqueuse d'hommes".
stringr::str_replace("^Croqueuse D Homme$", "Croqueuse d'hommes") %>%
# Fix "Pukka".
stringr::str_replace("^Pooka$", "Pukka") %>%
# Fix names with French accents.
stringr::str_replace("^Commere$", "Commère") %>%
stringr::str_replace("^Enqueteur$", "Enquêteur") %>%
stringr::str_replace("^Menestrel$", "Ménestrel") %>%
stringr::str_replace("^Sorciere$", "Sorcière") %>%
stringr::str_replace("^Soûlard$", "Soûlard") %>%
stringr::str_replace("^Sorciere$", "Sorcière") %>%
stringr::str_replace("^Traitre$", "Traître")
list_roles
list_roles
# Get lines corresponding to titles.
gDoc %>% stringr::str_detect("[A-z]+ \\([A-z]+\\)")
# Get lines corresponding to titles.
gDoc %>% .[stringr::str_detect(., "[A-z]+ \\([A-z]+\\)")]
# Get lines corresponding to titles.
gDoc %>% .[stringr::str_detect(., "^[A-z]+ \\([A-z]+\\)$")]
# Get lines corresponding to titles.
gDoc %>% .[stringr::str_detect(., "^[A-z ]+ \\([A-z]+\\)$")]
# Get lines corresponding to titles.
gDoc %>% .[stringr::str_detect(., "^[A-z ]+ \\([A-z ]+\\)$")]
# Get lines corresponding to titles.
gDoc %>% .[stringr::str_detect(., "^[A-z ']+ \\([A-z ]+\\)$")]
# Get lines corresponding to titles.
gDoc %>% .[stringr::str_detect(., "^[A-z ']+ \\([A-z ']+\\)$")]
# Get lines corresponding to titles.
gDoc %>% .[stringr::str_detect(., "^.* \\(.*\\)$")]
# Get lines corresponding to titles.
gDoc %>% .[stringr::str_detect(., "^.+ \\(.*\\)$")]
# Get lines corresponding to titles.
gDoc %>% .[stringr::str_detect(., "^.+ \\(.+\\)$")]
# Get lines corresponding to titles.
gDoc %>% .[stringr::str_detect(., "^.+ \\(.+\\)$")]
list_roles
# Build the regex for searching the roles.
list_roles %>% paste0(sep = "|")
# Build the regex for searching the roles.
list_roles %>% paste0(collapse = "|")
# Build the regex for searching the roles.
list_roles %>% paste0(collapse = "|")
# Build the regex for searching the roles.
list_roles %>%
paste0(collapse = "|") %>%
paste0("(", ., ")")
catch_role
# Build the regex for catching a role.
catch_role <- list_roles %>%
paste0(collapse = "|") %>%
paste0("(", ., ")")
catch_role
# Build the regex for catching the title.
catch_title <- paste0(catch_role, " ",
"\\(", catch_role, "\\)")
# Get lines corresponding to titles.
gDoc %>% .[stringr::str_detect(., catch_title)]
